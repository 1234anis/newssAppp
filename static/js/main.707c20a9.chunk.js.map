{"version":3,"sources":["component/main.js","App.js","reportWebVitals.js","index.js"],"names":["Main","useState","articles","setArticle","search","setSearch","useEffect","searchNews","url","fetch","then","res","json","data","catch","error","console","log","className","type","placeholder","onChange","e","value","target","onClick","length","map","article","index","src","urlToImage","alt","title","author","description","href","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAyDeA,EAvDF,WACT,MAA2BC,mBAAS,IAApC,mBAAMC,EAAN,KAAeC,EAAf,KACA,EAAwBF,mBAAS,SAAjC,mBAAMG,EAAN,KAAaC,EAAb,KAEAC,qBAAU,WACNC,MAEF,IAEF,IAGMA,EAAW,WACb,IAAMC,EAAI,uCAAD,OAAwCJ,EAAxC,4CACTK,MAAMD,GAAKE,MAAK,SAACC,GAAD,OAAOA,EAAIC,UAAQF,MAAK,SAACG,GACzCV,EAAWU,EAAKX,aACbY,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAGpB,OACI,qBAAKG,UAAU,YAAf,SACI,sBAAKA,UAAU,OAAf,UACA,sBAAKA,UAAU,SAAf,UACI,uBAAOC,KAAK,SAAUC,YAAY,wBAAwBC,SAAU,SAACC,GAAD,OAf/DC,EAe8ED,EAAEE,OAAOD,WAdvGlB,EAAUkB,GADK,IAACA,KAgBL,wBAAQL,UAAU,MAAMO,QAASlB,EAAjC,gCAEJ,0CAGsB,IAAlBL,EAASwB,OAAY,+CACzBxB,EAASyB,KAAI,SAACC,EAAQC,GAAT,OACb,qBAAiBX,UAAU,UAA3B,SAEI,sBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,WAAf,UACA,qBAAKY,IAAKF,EAAQG,WAAYC,IAAI,aADlC,OAEA,sBAAKd,UAAU,eAAf,UACA,6BAAKU,EAAQK,QACb,4BAAIL,EAAQM,SACZ,4BAAIN,EAAQO,cACZ,4BACA,oBAAGC,KAAMR,EAAQpB,IAAKgB,OAAO,QAA7B,UACI,wBAAQN,UAAU,MAAlB,+BADJ,gBAVEW,YCvBPQ,G,MARH,WACV,OACE,mCACA,cAAC,EAAD,QCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.707c20a9.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport './style.css';\r\nconst Main = () => {\r\n    const[articles,setArticle]=useState([]);\r\n    const[search,setSearch]=useState(\"Apple\");\r\n\r\n    useEffect(()=>{\r\n        searchNews();\r\n        \r\n    },[]);\r\n\r\n    const readValue=(value)=>{\r\n     setSearch(value);\r\n    }\r\n    const searchNews=()=>{\r\n        const url=`https://newsapi.org/v2/everything?q=${search}&apiKey=aae68af0b31246698ac1bf3ba6f12a69`;\r\n        fetch(url).then((res)=>res.json()).then((data)=>{\r\n        setArticle(data.articles);\r\n        }).catch((error)=>{\r\n            console.log(error);\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"padd\">\r\n            <div className=\"filter\">\r\n                <input type=\"search\"  placeholder=\"Enter Topic to Search\" onChange={(e)=>readValue(e.target.value)}/>\r\n                <button className=\"btn\" onClick={searchNews}>Search For News</button>\r\n            </div>\r\n            <h1>All News</h1>\r\n            {\r\n\r\n                articles.length===0?(<h1>No Data Found</h1>):\r\n            articles.map((article,index)=>(\r\n            <div key={index} className=\"article\">\r\n\r\n                <div className=\"padd-article\">\r\n                    <div className=\"news-img\">\r\n                    <img src={article.urlToImage} alt=\"news-img\" /> </div>\r\n                    <div className=\"news-details\"> \r\n                    <h2>{article.title}</h2>\r\n                    <p>{article.author}</p> \r\n                    <p>{article.description}</p>\r\n                    <p>\r\n                    <a href={article.url} target=\"blank\">\r\n                        <button className=\"btn\">Read Full Article</button> </a>\r\n                    </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            ))\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react'\nimport Main from './component/main';\nimport './App.css';\nconst App = () => {\n  return (\n    <>\n    <Main />\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}